name: planning-poker
on:
  push:
    branches:
      - master

env:
  BACK_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:latest
  CR_REGISTRY: ${{ secret.YA_REGISTRY }}
  CR_FOLDER: ${{ secret.YA_FOLDER_ID }}
  CR_REPOSITORY: planning-poker

jobs:
  build-and-push-core:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone
        uses: actions/checkout@v4

      - name: Java setup
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Maven package
        run: mvn --batch-mode --update-snapshots package

      - name: Login Yandex Cloud Container Registry
        if: ${{ vars.CURRENT_DOCKERHUB_REPO == 'YANDEX'}}
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build and push image to Yandex Cloud Container Registry
        if: ${{ vars.CURRENT_DOCKERHUB_REPO == 'YANDEX'}}
        run: |
          docker build -t cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_REPOSITORY }}:latest .
          docker push cr.yandex/${{ env.CR_REGISTRY }}/${{ env.CR_REPOSITORY }}:latest

      - name: Login to Docker Hub
        if: ${{ vars.CURRENT_DOCKERHUB_REPO == 'DOCKERHUB'}}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ vars.CURRENT_DOCKERHUB_REPO == 'DOCKERHUB'}}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BACK_IMAGE }}
          tags: latest
          labels: latest

      - name: Build and push Docker image
        if: ${{ vars.CURRENT_DOCKERHUB_REPO == 'DOCKERHUB'}}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.BACK_IMAGE }}:latest

      - name: Deploy to Yandex Cloud
        uses: yc-actions/yc-coi-deploy@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ env.CR_FOLDER }}
          vm-name: ${{ vars.YA_VM_NAME }}
          vm-service-account-name: dev
          vm-cores: 1
          vm-memory: 1Gb
          vm-core-fraction: 5
          vm-subnet-id: ${{ secrets.YA_VM_SUBNET_ID }}
          user-data-path: './yandex-cloud/user.yaml'
          docker-compose-path: './yandex-cloud/docker-compose.yaml'

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push-core]
    steps:
      - name: show
        run: ls -la
